{% extends "base.html" %}

{% block title %}Package Usage Results<br><p>&nbsp;&nbsp;&nbsp;&nbsp;Results of the UV-CDAT package usage responses</p>{% endblock title %}

{% block content %}
{% load staticfiles %}

<style>

.arc text {
  font: 10px sans-serif;
  text-anchor: middle;
}

.arc path {
  stroke: #fff;
}

.legend {
  font-size: 12px;
}
rect {
  stroke-width: 2;
}

</style>
<script src="https://d3js.org/d3.v4.min.js"></script>

<div id="mostUsed_chart"></div>

<script>

      (function(d3) {
        'use strict';

        var dataset = {{all_responses|safe}};

        var width = 550;
        var height = 360;
        var radius = Math.min(width, height) / 2;
        var donutWidth = 75;
        var legendRectSize = 18;
        var legendSpacing = 4;

        var color = d3.scaleOrdinal(d3.schemeCategory20b);

        var svg = d3.select('#installProc_chart')
          .append('svg')
          .attr('width', width)
          .attr('height', height)
          .append('g')
          .attr('transform', 'translate(' + (width / 2) +
            ',' + (height / 2) + ')');

        var arc = d3.arc()
          .innerRadius(radius - donutWidth)
          .outerRadius(radius);

        var pie = d3.pie()
          .value(function(d) { return d.count; })
          .sort(null);

        var path = svg.selectAll('path')
          .data(pie(dataset))
          .enter()
          .append('path')
          .attr('d', arc)
          .attr('fill', function(d) {
            return color(d.data.label);
          });

        var legend = svg.selectAll('.legend')                     
          .data(color.domain())                                  
          .enter()                                              
          .append('g')                                          
          .attr('class', 'legend')                              
          .attr('transform', function(d, i) {                   
            var height = legendRectSize + legendSpacing;        
            var offset =  height * color.domain().length / 2;  
            var horz = -2 * legendRectSize;                   
            var vert = i * height - offset;                   
            return 'translate(' + (-275) + ',' + vert + ')';  
          });                                                

        legend.append('rect')                               
          .attr('width', legendRectSize)                   
          .attr('height', legendRectSize)                   
          .style('fill', color)                             
          .style('stroke', color);                          

        legend.append('text')                              
          .attr('x', legendRectSize + legendSpacing)      
          .attr('y', legendRectSize - legendSpacing)     
          .text(function(d) { return d; });             

      })(window.d3);

</script>

{% endblock content %}
